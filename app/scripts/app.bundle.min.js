/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/../app/";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Created by 郑树聪 on 2016/2/14.
	 */

	//'use strict';

	var $config = __webpack_require__(1);

	/**
	 * 处理用户认证
	 */
	$config.musicApp.factory('AuthenticationService', function(){

	    var auth = {
	        isAuthenticated: false,
	        isAdmin: false
	    };
	    return auth;
	});

	$config.musicApp.factory('TokenInterceptor', function ($q, $window, $location, AuthenticationService) {
	    return {
	        request: function (config) {
	            config.headers = config.headers || {};
	            if ($window.sessionStorage.token) {
	                config.headers.Authorization = 'Bearer ' + $window.sessionStorage.token;
	            }
	            return config;
	        },

	        requestError: function(rejection) {
	            return $q.reject(rejection);
	        },

	        response: function (response) {
	            if (response !== null && response.status === 200 &&
	                $window.sessionStorage.token && !AuthenticationService.isAuthenticated) {
	                AuthenticationService.isAuthenticated = true;
	            }
	            return response || $q.when(response);
	        },

	        responseError: function(rejection) {
	            if (rejection !== null && rejection.status === 401 &&
	                ($window.sessionStorage.token || AuthenticationService.isAuthenticated)) {
	                delete $window.sessionStorage.token;
	                AuthenticationService.isAuthenticated = false;
	                $location.path("/login");
	            }

	            return $q.reject(rejection);
	        }
	    };
	});

	// 配置拦截器
	$config.musicApp.config(function ($httpProvider) {
	    $httpProvider.interceptors.push('TokenInterceptor');
	});

	$config.musicApp.config(['$routeProvider', function($routeProvider) {
	    $routeProvider
	        // 首页,发现音乐
	        .when('/', {
	            templateUrl: 'app/views/home.html',
	            controller: 'UserCtrl',
	            access: { requiredLogin: false }
	        })
	        // 登录页
	        .when("/login", {
	            templateUrl: 'app/views/login.html',
	            controller: 'UserCtrl',
	            access: { requiredLogin: false }
	        })
	        // 注册页
	        .when('/register', {
	            templateUrl: 'app/views/register.html',
	            controller: 'UserCtrl',
	            access: { requiredLogin: false }
	        })
	        // 未登录提示页
	        .when('/unLogin', {
	            templateUrl: 'app/views/unLogin.html',
	            controller: 'UserCtrl',
	            access: { requiredLogin: false }
	        })
	        // 我的音乐
	        .when('/myMusic', {
	            templateUrl: 'app/views/myMusic.html',
	            controller: 'MyMusicCtrl',
	            access: { requiredLogin: true }
	        })
	        // 管理中心
	        .when('/admin', {
	            templateUrl: 'app/views/admin.html',
	            controller: 'AdminCtrl',
	            access: { requiredLogin: true }
	        })
	        .otherwise({
	            redirectTo: "/",
	            access: { requiredLogin: false }
	        });

	}]);

	$config.musicApp.run(function($rootScope, $location, $window, AuthenticationService) {
	    $rootScope.$on("$routeChangeStart", function(event, nextRoute, currentRoute) {

	        // 未登录,跳转到登录页
	        if (nextRoute !== null && nextRoute.access !== null && nextRoute.access.requiredLogin &&
	            !AuthenticationService.isAuthenticated && !$window.sessionStorage.token) {

	            $location.path("/unLogin");
	        }
	    });
	});

	// 加载页面angular控制器组件
	__webpack_require__(2);
	__webpack_require__(3);
	__webpack_require__(4);
	__webpack_require__(6);
	__webpack_require__(7);

	module.exports = $config.musicApp;


/***/ },
/* 1 */
/***/ function(module, exports) {

	/**
	 * Angular项目前端配置
	 * Created by 郑树聪 on 2016/2/28.
	 */

	module.exports = {
	    musicApp: angular.module('musicApp', ['ngRoute', 'ui.bootstrap']),
	    base_url: 'http://localhost:3000/',
	    api: {
	        register: 'api/register',
	        login: 'api/login',
	        logout: 'api/logout'
	    }
	};

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Created by 郑树聪 on 2016/3/4.
	 */
	var $config = __webpack_require__(1);

	$config.musicApp.controller('MainCtrl', ['$scope', '$location', '$window',
	    function($scope, $location, $window){
	        //$scope.$on('$viewContentLoaded', function(){
	        //    var url = $location.url();
	        //    var urlReg = /^[\/|\/myMusic|\/admin]/;
	        //    var subNav = document.querySelector('#m-sub-nav').
	        //    subNav.find('li').removeClass('active');
	        //    if(url.match(urlReg) === '/'){
	        //        subNav.find('li:first-child').addClass('active');
	        //    } else if(url.match(urlReg) === '/myMusic') {
	        //        subNav.find('li:nth-child(2)').addClass('active');
	        //    } else if(url.match(urlReg) === '/admin') {
	        //        subNav.find('li:nth-child(3)').addClass('active');
	        //    }
	        //});
	    }
	]);


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Created by 郑树聪 on 2016/3/1.
	 */
	var $config = __webpack_require__(1);

	$config.musicApp.controller('HeaderCtrl', ['$scope', '$location', '$window',
	    function($scope, $location, $window){
	        $scope.load = function() {
	            var url = $location.url();
	            var urlReg = /^[\/|\/myMusic|\/admin]/;
	            var subNav = angular.element(document.querySelector('#m-sub-nav'));
	            subNav.find('li').removeClass('active');
	            if(url.match(urlReg)[0] === '/'){
	                subNav.find('li:first-child').addClass('active');
	            } else if(url.match(urlReg)[0] === '/myMusic') {
	                subNav.find('li:nth-child(2)').addClass('active');
	            } else if(url.match(urlReg)[0] === '/admin') {
	                subNav.find('li:nth-child(3)').addClass('active');
	            }
	        };
	    }
	]).controller('DropdownCtrl', function ($scope, $log) {

	    $scope.status = {
	        isopen: false
	    };

	    $scope.toggled = function(open) {
	        $log.log('Dropdown is now: ', open);
	    };

	    $scope.toggleDropdown = function($event) {
	        $event.preventDefault();
	        $event.stopPropagation();
	        $scope.status.isopen = !$scope.status.isopen;
	    };

	    $scope.appendToEl = angular.element(document.querySelector('#dropdown-long-content'));
	});


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 用户操作控制器,登录/登出
	 * Created by 郑树聪 on 2016/2/17.
	 */
	var $config = __webpack_require__(1);
	var $commonServiecs = __webpack_require__(5);

	$config.musicApp.factory('UserService', ['$http', '$window', function($http, $window){
	    return {
	        // 注册服务
	        register: function(username, email, password){

	            var url = $config.base_url + $config.api.register;
	            return $http.post(url, {
	                username: username,
	                email: email,
	                password: password
	            });
	        },
	        // 登录服务
	        login: function(email, password) {

	            var url = $config.base_url + $config.api.login;
	            return $http.post(url, {
	                email: email,
	                password: password
	            });
	        },
	        // 登出服务
	        logout: function() {
	            var url = $config.base_url + $config.api.logout;
	            var email = JSON.parse($window.sessionStorage.userInfo).email;
	            var token = $window.sessionStorage.token;
	            return $http.post(url, {
	                email: email,
	                token: token
	            });
	        }
	    };
	}]).controller('UserCtrl', ['$scope', '$location', '$window', 'UserService', 'AuthenticationService',
	    function($scope, $location, $window, UserService, AuthenticationService){

	        // 注册事件
	        $scope.register = function(username, email, password1, password2) {
	            if(!username){
	                $scope.username = '请输入用户名';
	            } else if(!email){
	                $scope.message = '请输入邮箱';
	            } else if(!password1){
	                $scope.message = '请输入密码';
	            } else if(password1 !== password2){
	                $scope.message = '两次密码不一致';
	            } else{
	                $scope.disabled = true;   //防止表单重复提交
	                $scope.message = false;
	                var password = CryptoJS.SHA256(password1).toString();
	                //password = CryptoJS.HmacSHA256(password,'ustc').toString();
	                password = password1;
	                UserService.register(username, email, password).success(function(data, status, headers, config){
	                    if(data.success) {
	                        $scope.disabled = false;
	                        $location.path('/login');
	                    } else {
	                        console.log(data.msg);
	                        $scope.message = data.msg;
	                    }
	                })
	                .error(function(data, status, headers, config){
	                    $scope.message = "加载失败，请重新再试";
	                    $scope.disabled = false;
	                });
	            }
	        };

	        // 登录事件
	        $scope.login = function(email, password) {
	            if (typeof email !== 'undefined' && typeof password !== 'undefined') {

	                UserService.login(email, password).success(function(data) {

	                    if(data.success) {
	                        // 登录成功
	                        AuthenticationService.isAuthenticated = true;
	                        if(data.type === 0 || data.type === 1) {
	                            AuthenticationService.isAdmin = true;
	                        }
	                        $window.sessionStorage.token = data.token;
	                        $window.sessionStorage.userInfo = JSON.stringify(data.user);
	                        $location.path('/');
	                    } else {
	                        $scope.message = data.msg;
	                        delete $window.sessionStorage.token;
	                    }
	                }).error(function(status, data) {
	                    console.log(status);
	                    console.log(data);
	                    delete $window.sessionStorage.token;
	                });
	            } else if(typeof email === 'undefined') {
	                //$scope.emailTooltipIsOpen = !$scope.emailTooltipIsOpen;
	                //$scope.message = '邮箱不能为空';
	            } else if(typeof password === 'undefined') {
	                //$scope.message = '密码不能为空';
	            }
	        };

	        // 登出事件
	        $scope.logout = function logout() {

	            UserService.logout().success(function(data) {
	                if (AuthenticationService.isAuthenticated) {
	                    AuthenticationService.isAuthenticated = false;
	                    AuthenticationService.isAdmin = false;
	                    delete $window.sessionStorage.token;
	                    delete $window.sessionStorage.userInfo;
	                    $location.path('/');
	                }
	            }).error(function(status, data){

	            });
	        };
	    }
	]);


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 公共services模块
	 * Created by 郑树聪 on 2016/2/29.
	 */
	var $config = __webpack_require__(1);

	//$config.musicApp.factory('CryptoJS',function(){
	//    //加密模块
	//    return window.CryptoJS;
	//});


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Created by 郑树聪 on 2016/2/29.
	 */
	var $config = __webpack_require__(1);

	$config.musicApp.controller('MyMusicCtrl', ['$scope', '$location', '$window',
	    function($scope, $location, $window){

	    }
	]);


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Created by 郑树聪 on 2016/2/29.
	 */
	var $config = __webpack_require__(1);

	$config.musicApp.controller('AdminCtrl', ['$scope', '$location', '$window',
	    function($scope, $location, $window){

	    }
	]);


/***/ }
/******/ ]);
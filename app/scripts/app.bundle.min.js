/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/../app/";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Created by 郑树聪 on 2016/2/14.
	 */

	//'use strict';

	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	musicApp.config(['cfpLoadingBarProvider', function(cfpLoadingBarProvider) {
	        cfpLoadingBarProvider.includeSpinner = false;
	}]);

	/**
	 * 用户认证服务
	 */
	musicApp.factory('AuthenticationService', function(){

	    var auth = {
	        isAuthenticated: false,
	        isAdmin: false
	    };
	    return auth;
	});
	/**
	 * http请求拦截器，在请求头增加验证
	 */
	musicApp.factory('TokenInterceptor', function ($rootScope, $q, $window, $location, AuthenticationService) {
	    return {
	        request: function (config) {
	            config.headers = config.headers || {};
	            if ($window.sessionStorage.token) {
	                config.headers.Authorization = 'Bearer ' + $window.sessionStorage.token;
	            }
	            return config;
	        },

	        requestError: function(rejection) {
	            return $q.reject(rejection);
	        },

	        response: function (response) {
	            if (response !== null && response.status === 200 &&
	                $window.sessionStorage.token && !AuthenticationService.isAuthenticated) {
	                AuthenticationService.isAuthenticated = true;
	            }
	            return response || $q.when(response);
	        },

	        responseError: function(rejection) {
	            if (rejection !== null && rejection.status === 401 &&
	                ($window.sessionStorage.token || AuthenticationService.isAuthenticated)) {
	                $window.sessionStorage.clear();
	                AuthenticationService.isAuthenticated = false;
	                $rootScope.prevUrl = $location.url();
	                $location.path("/login");
	            }

	            return $q.reject(rejection);
	        }
	    };
	});
	// 配置拦截器
	musicApp.config(function ($httpProvider) {
	    $httpProvider.interceptors.push('TokenInterceptor');
	});

	musicApp.config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider) {

	    $urlRouterProvider.when('', '/');
	    $urlRouterProvider.when('/admin', '/admin/userInfo');
	    $urlRouterProvider.when('/admin/singers', '/admin/singers/singerList');
	    $urlRouterProvider.when('/admin/albums', '/admin/albums/albumList');
	    $urlRouterProvider.otherwise('/');

	    $stateProvider
	        .state('home', {
	            url: '',
	            templateUrl: 'app/views/Home/home.html',
	            controller: 'UserCtrl',
	            access: { requiredLogin: false },
	            ignoreLoadingBar: true
	        })
	        //.state('home.topList', {
	        //    url: '/',
	        //    templateUrl: 'app/views/Home/views/home.topList.html',
	        //    access: { requiredLogin: false },
	        //    ignoreLoadingBar: true
	        //})
	        .state('home.playlist', {
	            url: '/',
	            templateUrl: 'app/views/Home/views/home.playlist.html',
	            access: { requiredLogin: false },
	            ignoreLoadingBar: true
	        })
	        .state('home.singer', {
	            url: '/singer',
	            templateUrl: 'app/views/Home/views/home.singer.html',
	            access: { requiredLogin: false },
	            ignoreLoadingBar: true
	        })

	        .state('search', {
	            url: '/search?keyword&type',
	            templateUrl: 'app/views/Search/search.html',
	            reloadOnSearch: false,
	            ignoreLoadingBar: true
	        })

	        .state('register', {
	            url: '/register',
	            templateUrl: 'app/views/User/register.html',
	            controller: 'UserCtrl',
	            access: { requiredLogin: false },
	            ignoreLoadingBar: true
	        })
	        .state('login', {
	            url: '/login',
	            templateUrl: 'app/views/User/login.html',
	            controller: 'UserCtrl',
	            access: { requiredLogin: false },
	            ignoreLoadingBar: true
	        })

	        .state('myMusic', {
	            url: '/myMusic',
	            templateUrl: 'app/views/MyMusic/myMusic.html',
	            controller: 'MyMusicCtrl',
	            reloadOnSearch: false,
	            access: { requiredLogin: true },
	            ignoreLoadingBar: true
	        })

	        .state('admin', {
	            url: '/admin',
	            templateUrl: 'app/views/Admin/admin.html',
	            controller: 'AdminCtrl',
	            //reloadOnSearch: false,
	            access: { requiredLogin: true },
	            ignoreLoadingBar: true
	        })

	        .state('admin.userInfo', {
	            url: '/userInfo',
	            templateUrl: 'app/views/Admin/views/admin.userInfo.html',
	            access: { requiredLogin: true }
	        })
	        .state('admin.editInfo', {
	            url: '/editInfo',
	            templateUrl: 'app/views/Admin/views/admin.editInfo.html',
	            access: { requiredLogin: true }
	        })

	        .state('admin.singers', {
	            url: '/singers',
	            templateUrl: 'app/views/Admin/views/admin.singers.html',
	            access: { requiredLogin: true }
	        })
	        .state('admin.singers.singerList', {
	            url: '/singerList',
	            templateUrl: 'app/views/Admin/views/admin.singers.singerList.html',
	            access: { requiredLogin: true }
	        })
	        .state('admin.singers.addSinger', {
	            url: '/addSinger',
	            templateUrl: 'app/views/Admin/views/admin.singers.singerHandle.html',
	            access: { requiredLogin: true }
	        })
	        .state('admin.singers.editSinger', {
	            url: '/editSinger/:singerId',
	            templateUrl: 'app/views/Admin/views/admin.singers.singerHandle.html',
	            access: { requiredLogin: true }
	        })

	        .state('admin.albums', {
	            url: '/albums',
	            templateUrl: 'app/views/Admin/views/admin.albums.html',
	            access: { requiredLogin: true }
	        })
	        .state('admin.albums.albumList', {
	            url: '/albumList',
	            templateUrl: 'app/views/Admin/views/admin.albums.albumList.html',
	            access: { requiredLogin: true }
	        })
	        .state('admin.albums.addAlbum', {
	            url: '/addAlbum',
	            templateUrl: 'app/views/Admin/views/admin.albums.albumHandle.html',
	            access: { requiredLogin: true }
	        })
	        .state('admin.albums.editAlbum', {
	            url: '/editAlbum/:albumId',
	            templateUrl: 'app/views/Admin/views/admin.albums.albumHandle.html',
	            access: { requiredLogin: true }
	        })

	        .state('admin.songs', {
	            url: '/songs',
	            templateUrl: 'app/views/Admin/views/admin.songs.html',
	            access: { requiredLogin: true }
	        })

	        .state('admin.uploadMusic', {
	            url: '/uploadMusic',
	            templateUrl: 'app/views/Admin/views/admin.uploadMusic.html',
	            access: { requiredLogin: true }
	        })

	        .state('admin.users', {
	            url: '/users',
	            templateUrl: 'users.html',
	            access: { requiredLogin: true }
	        })
	        .state('admin.admins', {
	            url: '/admins',
	            templateUrl: 'admins.html',
	            access: { requiredLogin: true }
	        });
	}]);

	musicApp.run(function($rootScope, $state, $location, $window, AuthenticationService) {

	    $rootScope.$state = $state;
	    $rootScope.defaultSongImg = $config.default_song_img;

	    // 监听路由变化，进行相应处理
	    $rootScope.$on("$stateChangeStart", function(event, toState, toParams, fromState, fromParams) {

	        // 未登录,跳转到登录页
	        if (toState !== null && !angular.isUndefined(toState.access) && toState.access !== null &&
	            toState.access.requiredLogin && !AuthenticationService.isAuthenticated && !$window.sessionStorage.token) {

	            event.preventDefault();
	            // 未登录时将原先要跳转到的url的存到全局变量prevUrl
	            $rootScope.prevUrl = toState.url;
	            $state.go('login');
	        }
	    });
	});

	// 加载页面angular控制器组件
	__webpack_require__(2);
	__webpack_require__(4);
	__webpack_require__(5);
	__webpack_require__(7);
	__webpack_require__(10);
	__webpack_require__(20);
	__webpack_require__(23);


/***/ },
/* 1 */
/***/ function(module, exports) {

	/**
	 * Angular项目前端配置
	 * Created by 郑树聪 on 2016/2/28.
	 */
	var base_url = 'http://localhost:3000/';
	var singer_url = 'api/singer/';
	var album_url = 'api/album/';
	var song_url = 'api/song/';
	var playlist_url = 'api/playlist/';

	module.exports = {
	    musicApp: angular.module('musicApp', ['ngRoute', 'ui.bootstrap', 'ui.router', 'angular-loading-bar', 'angularFileUpload']),
	    base_url: base_url,
	    default_song_img: 'http://localhost:3000/app/images/default_song_img.jpg'
	};

	module.exports.api = {
	    // 用户操作
	    register: base_url + 'api/user/register',
	    login: base_url + 'api/user/login',
	    logout: base_url + 'api/user/logout',
	    // 管理中心
	    updateUserInfo: base_url + 'api/user/updateUserInfo',
	    getMenuByRole: base_url + 'api/admin/getMenuByRole',
	    getAreas: base_url + 'api/admin/getAreas',
	    // 歌手
	    getAllSingers: base_url + singer_url + 'getAllSingers',
	    getSingers: base_url + singer_url + 'getSingers',
	    getSingerById: base_url + singer_url + 'getSingerById',
	    addSinger: base_url + singer_url + 'addSinger',
	    updateSinger: base_url + singer_url + 'updateSinger',
	    deleteSingers: base_url + singer_url + 'deleteSingers',
	    // 专辑
	    getAllAlbums: base_url + album_url + 'getAllAlbums',
	    getAlbums: base_url + album_url + 'getAlbums',
	    getAlbumById: base_url  + album_url+ 'getAlbumById',
	    getAlbumsBySingerId: base_url + album_url + 'getAlbumsBySingerId',
	    addAlbum: base_url + album_url + 'addAlbum',
	    updateAlbum: base_url + album_url + 'updateAlbum',
	    deleteAlumsById: base_url + album_url + 'deleteAlumsById',
	    deleteAlbumsBySingerId: base_url + album_url + 'deleteAlbumsBySingerId',
	    // 歌曲
	    getSongsByPage: base_url + song_url + 'getSongsByPage',
	    getSongById: base_url + song_url  + 'getSongById',
	    getSongsByPlaylistId: base_url + song_url + 'getSongsByPlaylistId',
	    uploadSongs: base_url + song_url  + 'uploadSongs',
	    updateSong: base_url + song_url  + 'updateSong',
	    deleteSongsByIds: base_url + song_url  + 'deleteSongsById',
	    collectSong: base_url + song_url  + 'collectSong',
	    cancelCollectSong: base_url + song_url  + 'cancelCollectSong',
	    // 歌单
	    filterPlayListsByPage: base_url + playlist_url  + 'filterPlayListsByPage',
	    getPlayListsByUserCreate: base_url + playlist_url  + 'getPlayListsByUserCreate',
	    getPlayListsByUserCollect: base_url + playlist_url  + 'getPlayListsByUserCollect',
	    addPlaylist: base_url + playlist_url  + 'addPlaylist',
	    updatePlaylist: base_url + playlist_url  + 'updatePlaylist',
	    deletePlaylistById: base_url + playlist_url  + 'deletePlaylistById'
	};

	//歌手类型数据
	module.exports.singerTypes = [
	    {id: 1, text: '男歌手'},
	    {id: 2, text: '女歌手'},
	    {id: 3, text: '乐队组合'}
	];
	//语言类型数组
	module.exports.languages = [
	    {id: 1, text: '华语'},
	    {id: 2, text: '粤语'},
	    {id: 3, text: '欧美'},
	    {id: 4, text: '日语'},
	    {id: 5, text: '韩语'},
	    {id: 6, text: '小语种'}
	];

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 顶部header导航栏控制器
	 * Created by 郑树聪 on 2016/3/1.
	 */
	__webpack_require__(3);

	var $config = __webpack_require__(1);

	$config.musicApp.controller('HeaderCtrl', ['$scope', '$location', '$window', '$state', 'AuthenticationService',
	    function($scope, $location, $window, $state, AuthenticationService){

	        // 导航栏选项
	        $scope.items = [
	            {id: '1', name: '发现音乐', state: 'home'},
	            {id: '2', name: '我的音乐', state: 'myMusic'},
	            {id: '3', name: '管理中心', state: 'admin'}
	        ];
	        $scope.subNavbarItems = [
	            //{name: '最新音乐', state: '#/discover'},
	            //{name: '排行榜', state: 'home.topList'},
	            {name: '歌单', state: 'home.playlist'},
	            {name: '歌手', state: 'home.singer'}
	        ];
	        $scope.isHome = false;
	        $scope.isActive = function(state) {
	            if($state.includes(state)) {
	                var reg = /^home/;
	                if(reg.test(state)) {
	                    $scope.isHome = true;
	                }
	                return true;
	            }
	            return false;
	        };

	        // 判断是否登录
	        $scope.isLogin = AuthenticationService.isAuthenticated;
	        // 判断是否是管理员
	        $scope.isAdmin = AuthenticationService.isAdmin;

	        if($scope.isLogin && $window.sessionStorage.getItem('userInfo')) {
	            $scope.userInfo = JSON.parse($window.sessionStorage.getItem('userInfo'));
	        }

	        $scope.goSearch = function($event) {

	            var keyword = $event.target.value;

	            var keyCode = $event.which || $event.keyCode;
	            if (keyCode === 13 && keyword !== '') {
	                $state.go('search', {keyword: keyword, type: 0});
	            }
	        };
	    }
	]);


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 顶部header导航栏模块指令集
	 * Created by 郑树聪 on 2016/3/6.
	 */
	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	// 未登录时显示登录、注册盒子
	musicApp.directive('loginBox', function(){

	    return {
	        replace: true,
	        template: '<ul class="login-box clearfix">' +
	        '<li class="login"><a ui-sref="login"><i class="fa fa-sign-in"></i> 登录</a></li>' +
	        '<li class="register"><a ui-sref="register"><i class="fa fa-user-plus"></i> 注册</a></li>' +
	        '</ul>'
	    };
	});

	// 用户登录后再导航显示的用户登录盒
	musicApp.directive('userInfoBox', function(){

	    return {
	        replace: true,
	        template: '<ul class="nav navbar-nav user-info">' +
	        '<li class="dropdown" uib-dropdown>' +
	        '<a href id="user-dropdown" uib-dropdown-toggle title="{{userInfo.username}}">' +
	        '{{userInfo.username}}<b class="caret"></b></a>' +
	        '<ul class="dropdown-menu" uib-dropdown-menu aria-labelledby="user-dropdown">' +
	        '<li><a href="#/admin?page=userInfo"><i class="fa fa-user"></i>我的主页</a></li>' +
	        '<li><a href="#/admin?page=editInfo"><i class="fa fa-cog"></i>个人设置</a></li>' +
	        '<li ng-click="logout()"><a href="javascript:void(0)"><i class="fa fa-sign-out"></i>退出</a></li>' +
	        '</ul></li></ul>',
	        controller: 'UserCtrl'
	    };
	});


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Created by 郑树聪 on 2016/4/15.
	 */
	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	musicApp.controller('HomeCtrl', ['$scope', '$state', '$stateParams', 'PageTableData', 'SongService', 'SingerService',
	    'AlbumService', 'PlaylistService',
	    function($scope, $state, $stateParams, PageTableData, SongService, SingerService, AlbumService, PlaylistService){


	        $scope.getPlaylists = function() {

	        };

	        $scope.getSingers = function() {

	        };
	    }
	]);

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 用户操作服务、控制器,登录/登出
	 * Created by 郑树聪 on 2016/2/17.
	 */
	__webpack_require__(6);

	var $config = __webpack_require__(1);

	$config.musicApp.controller('UserCtrl', ['$rootScope', '$scope', '$location', '$window', '$state', 'UserService', 'AuthenticationService',
	    function($rootScope, $scope, $location, $window, $state, UserService, AuthenticationService){

	        // 注册事件
	        $scope.register = function(username, email, password1, password2) {
	            if(!username){
	                $scope.username = '请输入用户名';
	            } else if(!email){
	                $scope.message = '请输入邮箱';
	            } else if(!password1){
	                $scope.message = '请输入密码';
	            } else if(password1 !== password2){
	                $scope.message = '两次密码不一致';
	            } else{
	                $scope.disabled = true;   //防止表单重复提交
	                $scope.message = false;
	                //var password = CryptoJS.SHA256(password1).toString();
	                //password = CryptoJS.HmacSHA256(password,'ustc').toString();
	                var password = password1;
	                UserService.register(username, email, password).success(function(data){
	                    if(data.success) {
	                        $scope.disabled = false;
	                        $location.path('/login');
	                    } else {
	                        console.log(data.msg);
	                        $scope.message = data.msg;
	                    }
	                })
	                .error(function(data){
	                    $scope.message = "加载失败，请重新再试";
	                    $scope.disabled = false;
	                });
	            }
	        };

	        // 登录事件
	        $scope.login = function(email, password) {
	            if (typeof email !== 'undefined' && typeof password !== 'undefined') {

	                UserService.login(email, password).success(function(data) {

	                    if(data.success) {
	                        // 登录成功
	                        AuthenticationService.isAuthenticated = true;
	                        if(data.type === 0 || data.type === 1) {
	                            AuthenticationService.isAdmin = true;
	                        }
	                        $window.sessionStorage.token = data.token;
	                        $window.sessionStorage.userInfo = JSON.stringify(data.user);
	                        var prevUrl = $rootScope.prevUrl;
	                        if(typeof prevUrl !== 'undefined') {
	                            $location.path(prevUrl);
	                        } else {
	                            $location.path('/#/');
	                        }
	                    } else {
	                        $scope.message = data.msg;
	                        delete $window.sessionStorage.token;
	                    }
	                }).error(function(status, data) {
	                    console.log(status);
	                    console.log(data);
	                    delete $window.sessionStorage.token;
	                });
	            } else if(typeof email === 'undefined') {
	                //$scope.emailTooltipIsOpen = !$scope.emailTooltipIsOpen;
	                //$scope.message = '邮箱不能为空';
	            } else if(typeof password === 'undefined') {
	                //$scope.message = '密码不能为空';
	            }
	        };

	        // 登出事件
	        $scope.logout = function logout() {

	            UserService.logout().success(function(data) {
	                if (AuthenticationService.isAuthenticated) {
	                    AuthenticationService.isAuthenticated = false;
	                    AuthenticationService.isAdmin = false;
	                    $window.sessionStorage.clear();
	                    //$location.path('/#/');
	                    $state.go('home', {}, {reload:true});
	                }
	            });
	        };
	    }
	]);


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 用户相关服务
	 * Created by 郑树聪 on 2016/4/9.
	 */
	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	musicApp.factory('UserService', ['$http', '$window', function($http, $window){

	    return {
	        // 注册服务
	        register: function(username, email, password){

	            return $http.post($config.api.register, {
	                username: username,
	                email: email,
	                password: password
	            });
	        },
	        // 登录服务
	        login: function(email, password) {

	            return $http.post($config.api.login, {
	                email: email,
	                password: password
	            });
	        },
	        // 登出服务
	        logout: function() {

	            return $http.post($config.api.logout, {
	                email: JSON.parse($window.sessionStorage.userInfo).email,
	                token: $window.sessionStorage.token
	            });
	        },
	        // 更新用户信息
	        updateUserInfo: function(userInfo){

	            return $http.post($config.api.updateUserInfo, userInfo);
	        }
	    };
	}]);


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Created by 郑树聪 on 2016/2/29.
	 */
	__webpack_require__(8);
	__webpack_require__(9);
	var $config = __webpack_require__(1);
	//var $func = require('../Common/Functions');

	var musicApp = $config.musicApp;

	musicApp.controller('MyMusicCtrl', ['$scope', '$q', '$location', '$window', '$routeParams', '$uibModal',
	    'PlaylistService', 'SongService',
	    function($scope, $q, $location, $window, $routeParams, $uibModal, PlaylistService, SongService){

	        // 判断歌单菜单是否展开的
	        $scope.isCreateMenuOpen = false;
	        $scope.isCollectMenuOpen = false;

	        $scope.isOwner = true;

	        // 创建的歌单列表
	        $scope.createPlaylists = [];
	        // 收藏的歌单列表
	        $scope.collectPlaylists = [];
	        // 当前选中的歌单信息
	        $scope.currPlaylistInfo = {};
	        // 当前选中歌单的歌曲
	        $scope.currPlaylistSongs = [];

	        // 加载歌单（创建的、收藏的）
	        $scope.loadPlaylists = function(){

	            PlaylistService.getPlayListsByUserCreate().success(function(data) {

	                if(data.success) {

	                    $scope.createPlaylists = data.playlists;
	                    if(angular.isUndefined($routeParams.playlistId) || $routeParams.playlistId === '') {
	                        $location.search('playlistId', data.playlists[0].id.toString());
	                        $scope.locationId = data.playlists[0].id;
	                        $scope.currPlaylistInfo = data.playlists[0];
	                        $scope.isCreateMenuOpen = true;
	                        $scope.isOwner = true;
	                    } else {
	                        for(var i=0; i<data.playlists.length; i++) {
	                            if(data.playlists[i].id == $routeParams.playlistId) {
	                                $scope.locationId = data.playlists[i].id;
	                                $scope.currPlaylistInfo = data.playlists[i];
	                                $scope.isCreateMenuOpen = true;
	                                $scope.isOwner = true;
	                            }
	                        }
	                    }
	                }
	            });

	            PlaylistService.getPlayListsByUserCollect().success(function(data) {

	                if(data.success) {

	                    $scope.collectPlaylists = data.playlists;
	                    if(!angular.isUndefined($routeParams.playlistId) || $routeParams.playlistId !== '') {

	                        for(var i=0; i<data.playlists.length; i++) {
	                            if(data.playlists[i].id == $routeParams.playlistId) {
	                                $scope.locationId = data.playlists[i].id;
	                                $scope.currPlaylistInfo = data.playlists[i];
	                                $scope.isCollectMenuOpen = true;
	                                $scope.isOwner = false;
	                            }
	                        }
	                    }
	                }
	            });
	        };

	        // 菜单列表展开折叠切换
	        $scope.toggleMenuOpen = function(whichMenu) {

	            $scope[whichMenu] = !$scope[whichMenu];
	        };
	        // 点击列表改变url参数
	        $scope.changeUrl = function(newPlaylist, whichMenu) {

	            if($scope.currPlaylistInfo.id !== newPlaylist.id) {
	                $scope.currPlaylistSongs = [];
	                SongService.getSongsByPlaylistId(newPlaylist.id).success(function(data){

	                    if(data.success) {
	                        $scope.currPlaylistSongs = data.playlist_songs;
	                    }
	                });

	                $location.search('playlistId', newPlaylist.id.toString());
	                $scope.locationId = newPlaylist.id;

	                $scope[whichMenu] = true;
	                if(whichMenu === 'isCollectMenuOpen') {
	                    $scope.isOwner = false;
	                } else {
	                    $scope.isOwner = true;
	                }

	                $scope.currPlaylistInfo = newPlaylist;
	            }
	        };
	        /**
	         * 点击弹窗新建/修改歌单信息
	         * @param isCreate [Boolean] 判断是创建歌单还是修改，true为新建（默认值）
	         * @param playlist [Object] 当前编辑的歌单对象
	         */
	        $scope.open = function ($event, isCreate, playlist) {

	            $event.stopPropagation();

	            if(angular.isUndefined(isCreate)) {
	                isCreate = true;
	            }

	            var modalInstance = $uibModal.open({
	                animation: true,
	                templateUrl: 'myModalContent.html',
	                controller: function ($scope, $uibModalInstance) {

	                    $scope.playlist = playlist;
	                    $scope.ok = function () {
	                        $uibModalInstance.close($scope.playlist);
	                    };
	                    $scope.cancel = function () {
	                        $uibModalInstance.dismiss('取消');
	                    };
	                }
	            });
	            modalInstance.result.then(function (playlist) {
	                if(isCreate) {

	                    PlaylistService.addPlaylist(playlist).success(function(data) {
	                        if(data.success){
	                            window.location.reload();
	                        }
	                    });
	                } else {
	                    PlaylistService.updatePlaylist(playlist).success(function(data) {

	                        if(data.success) {
	                            window.location.reload();
	                        }
	                    });
	                }
	            }, function () {
	                console.log('Modal dismissed at: ' + new Date());
	            });
	        };
	        /**
	         * 点击，删除自建歌单或者取消收藏歌单
	         * @param playlistId [Number] 要删除的歌单id
	         */
	        $scope.deletePlaylist = function($event, playlistId) {

	            $event.stopPropagation();

	            PlaylistService.deletePlaylistById(playlistId).success(function(data) {

	                if(data.success) {
	                    window.location.reload();
	                } else {
	                    console.log(data.message);
	                    alert('删除失败！');
	                }
	            }).error(function(data) {
	                console.log(data.message);
	                alert('删除失败！');
	            });
	        };
	        /**
	         * 从自建歌单中取消某首收藏歌曲
	         * @param playlistId [Number] 歌单id
	         * @param songId [Number] 歌曲id
	         */
	        $scope.cancelCollectSong = function(playlistId, songId) {

	            SongService.cancelCollectSong(playlistId, songId).success(function(data) {

	                if(data.success) {
	                    window.location.reload();
	                } else {
	                    console.log(data.msg);
	                    alert('取消收藏有误!');
	                }
	            });
	        };
	        // 监控当前显示歌单的状态，若歌单改变则重新请求
	        $scope.$watch('currPlaylistInfo.id', function(value){

	            if(value) {

	                SongService.getSongsByPlaylistId(value).success(function(data){

	                    if(data.success) {
	                        $scope.currPlaylistSongs = data.playlist_songs;
	                    } else {
	                        $scope.currPlaylistSongs = [];
	                    }
	                });
	            }
	        });
	    }
	]);


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 歌单服务
	 * Created by 郑树聪 on 2016/4/6.
	 */
	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	// 管理中心相关服务
	musicApp.factory('PlaylistService', ['$http', function($http) {

	    return {
	        filterPlayListsByPage: function(pagination) {

	            return $http({
	                method: 'GET',
	                url: $config.api.filterPlayListsByPage,
	                params: {
	                    currPage: pagination.currPage,
	                    pageSize: pagination.pageSize,
	                    keyword: pagination.keyword
	                }
	            });
	        },
	        // 获取用户创建的歌单
	        getPlayListsByUserCreate: function(){

	            return $http({
	                method: 'GET',
	                url: $config.api.getPlayListsByUserCreate
	            });
	        },
	        // 获取用户收藏的歌单
	        getPlayListsByUserCollect: function(){

	            return $http({
	                method: 'GET',
	                url: $config.api.getPlayListsByUserCollect
	            });
	        },
	        // 添加歌单
	        addPlaylist: function(playlistInfo){

	            return $http({
	                method: 'POST',
	                url: $config.api.addPlaylist,
	                data: {
	                    playlist_name: playlistInfo.playlist_name,
	                    playlist_info: playlistInfo.playlist_info
	                }
	            });
	        },
	        // 更新歌单信息
	        updatePlaylist: function(playlistInfo){

	            return $http({
	                method: 'POST',
	                url: $config.api.updatePlaylist,
	                data: {
	                    id: playlistInfo.id,
	                    playlist_name: playlistInfo.playlist_name,
	                    playlist_info: playlistInfo.playlist_info
	                }
	            });
	        },
	        // 删除某张歌单(创建的、收藏的)
	        deletePlaylistById: function(id){

	            return $http({
	                method: 'POST',
	                url: $config.api.deletePlaylistById,
	                data: {
	                    id: id
	                }
	            });
	        }
	    };
	}]);


/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Created by 郑树聪 on 2016/4/8.
	 */
	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	// 管理中心相关服务
	musicApp.factory('SongService', ['$http', function($http) {

	    return {
	        // 分页获取所有歌曲
	        getSongsByPage: function(filters) {

	            return $http({
	                method: 'GET',
	                url: $config.api.getSongsByPage,
	                params: {
	                    language: filters.language,
	                    singer_id: filters.singer_id,
	                    album_id: filters.album_id,
	                    currPage: filters.currPage,
	                    pageSize: filters.pageSize,
	                    keyword: filters.keyword
	                }
	            });
	        },
	        // 根据歌曲id获取歌曲信息
	        getSongById: function(id) {

	            return $http({
	                method: 'GET',
	                url: $config.api.getSongById,
	                params: {
	                    id: id
	                }
	            });
	        },
	        // 根据歌单id获取歌单歌曲
	        getSongsByPlaylistId: function(id) {

	            return $http({
	                method: 'GET',
	                url: $config.api.getSongsByPlaylistId,
	                params: {
	                    playlistId: id
	                }
	            });
	        },
	        // 更新歌曲信息
	        updateSong: function(songInfo) {

	            return $http({
	                method: 'POST',
	                url: $config.api.updateSong,
	                data: {
	                    id: songInfo.id,
	                    song_name: songInfo.song_name,
	                    url: songInfo.url,
	                    publish_date: songInfo.publish_date,
	                    singer_id: songInfo.singer_id,
	                    album_id: songInfo.album_id
	                }
	            });
	        },
	        // 根据数组id删除歌曲
	        deleteSongsByIds: function(ids) {

	            return $http({
	                method: 'POST',
	                url: $config.api.deleteSongsByIds,
	                data: {
	                    ids: ids
	                }
	            });
	        },
	        // 收藏某首歌曲到自建歌单
	        collectSong: function(playlistId, songId) {

	            return $http({
	                method: 'POST',
	                url: $config.api.collectSong,
	                data: {
	                    playlistId: playlistId,
	                    songId: songId
	                }
	            });
	        },
	        // 从自建歌单中取消某首收藏歌曲
	        cancelCollectSong: function(playlistId, songId) {

	            return $http({
	                method: 'POST',
	                url: $config.api.cancelCollectSong,
	                data: {
	                    playlistId: playlistId,
	                    songId: songId
	                }
	            });
	        }
	    };
	}]);


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 用户管理模块控制器
	 * Created by 郑树聪 on 2016/2/29.
	 */
	__webpack_require__(11);
	__webpack_require__(12);

	__webpack_require__(14);
	__webpack_require__(6);

	var $func = __webpack_require__(13);
	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	// 管理中心页面控制器
	musicApp.controller('AdminCtrl', ['$scope', '$location', '$window', '$state', 'AdminService',
	    function($scope, $location, $window, $state, AdminService){

	        // 初始化当前用户的管理中心菜单
	        $scope.loadMenus = function(){

	            $scope.adminMenus = [];
	            if($window.sessionStorage.adminMenus) {
	                $scope.adminMenus = JSON.parse($window.sessionStorage.adminMenus);
	            } else {
	                AdminService.getMenu().success(function(data) {

	                    if(data.success) {
	                        $scope.adminMenus = data.menus;
	                        $window.sessionStorage.adminMenus = JSON.stringify(data.menus);
	                    } else {
	                        console.log(data.msg);
	                    }
	                }).error(function(data){

	                    console.log(data.msg);
	                });
	            }
	        };

	        $scope.$watch('$state.name', function(value) {

	        });
	    }
	]);

	// 用户信息控制器
	musicApp.controller('InfoCtrl', ['$scope', '$location', '$window', '$routeParams', 'AdminService', 'UserService',
	    function($scope, $location, $window, $routeParams, AdminService, UserService){

	        var areas = [];
	        $scope.userInfo = JSON.parse($window.sessionStorage.userInfo);
	        if($scope.userInfo.code !== '') {

	            if(angular.isUndefined($window.localStorage.areas)) {
	                AdminService.getAreas().success(function(data) {

	                    if(data.success) {
	                        $window.localStorage.areas = JSON.stringify({areas: data.areas});
	                        $scope.userInfo.areaName = $func.getAreaName($scope.userInfo.code, data.areas);
	                    } else {
	                        console.log(data.msg);
	                    }
	                }).error(function(data){

	                    console.log(data.msg);
	                });
	            } else {
	                areas = JSON.parse($window.localStorage.areas).areas;
	                $scope.userInfo.areaName = $func.getAreaName($scope.userInfo.code, areas);
	            }
	        }

	        // 更新用户信息
	        $scope.updateUserInfo = function(){

	            // 格式化日期
	            var birth = $scope.userInfo.birth;
	            $scope.userInfo.birth = $func.formatDate(birth);

	            UserService.updateUserInfo({userInfo: $scope.userInfo}).success(function(data) {

	                if(data.success) {
	                    $window.sessionStorage.userInfo = JSON.stringify($scope.userInfo);
	                    $scope.userInfo.birth = birth;
	                    alert('更新成功！');
	                } else {
	                    alert('更新失败！');
	                    console.log(data.msg);
	                }
	            }).error(function(data) {
	                alert('更新失败！');
	                console.log(data.msg);
	            });
	        };
	    }
	]);

	// 表格分页处理控制器
	musicApp.controller('PageTableCtrl', ['$scope', 'PageTableData', function($scope, PageTableData){

	    PageTableData.pagination = {
	        currPage: 1,
	        itemsPerPage: 10,
	        maxSize: 3,
	        totalItems: 0
	    };
	    PageTableData.itemIds = [];
	    PageTableData.selectItemIds = [];

	    // 分页器默认参数
	    $scope.pagination = PageTableData.pagination;

	    /**
	     * 全选事件
	     * @param tableId {String} 分页表格的id
	     */
	    $scope.toggleSelectAll = function(tableId) {

	        $scope.isSelectAllModel = !$scope.isSelectAllModel;

	        if($scope.isSelectAllModel) {
	            PageTableData.selectItemIds = angular.copy(PageTableData.itemIds);
	            angular.element(document.getElementById(tableId)).find('input[name="item-check"]')
	                .prop('checked', true).attr('isSelected', '1');
	        } else {
	            PageTableData.selectItemIds = [];
	            angular.element(document.getElementById(tableId)).find('input[name="item-check"]')
	                .prop('checked', false).removeAttr('isSelected');
	        }

	    };
	    /**
	     * 单选事件
	     * @param $event {Object} 触发的事件对象
	     * @param itemId {Array} 选中的项id
	     */
	    $scope.toggleSelect = function($event, itemId) {

	        if($event.target.getAttribute('isSelected') !== '1') {
	            // 未选中变为选中
	            $event.target.setAttribute('isSelected', '1');
	            PageTableData.selectItemIds.push(itemId);
	        } else {
	            // 选中变为未选中
	            $event.target.removeAttribute('isSelected');
	            var index = PageTableData.selectItemIds.indexOf(itemId);
	            if(index !== -1){
	                PageTableData.selectItemIds.splice(index, 1);
	            }
	        }

	        $scope.isSelectAllModel = (PageTableData.selectItemIds.length === PageTableData.itemIds.length);
	    };

	    /**
	     * 页码改变时事件
	     * @param getItems {Function} 页码改变时调用的方法
	     * @param $scope.keyword {String} 父控制器参数，搜索关键字
	     */
	    $scope.pageChanged = function(getItems, params) {

	        getItems($scope.pagination.currPage, $scope.pagination.itemsPerPage, params);
	    };

	}]);

	musicApp.controller('UploadMusicCtrl', ['$scope', '$window', 'FileUploader', function($scope, $window, FileUploader){

	    $scope.songInfo = {};

	    // 点击选择文件触发input[type=file]标签的点击事件
	    $scope.btnSelectFile = function(){
	        document.querySelector('#upload-mp3').click();
	    };

	    // 实例化上传控件
	    $scope.uploader = new FileUploader({
	        url: $config.api.uploadSongs,
	        method: 'POST',
	        headers: {
	            Authorization: 'Bearer ' + $window.sessionStorage.token
	        }
	    });
	    // 上传之前对每一文件的操作事件
	    $scope.uploader.onBeforeUploadItem = function(item) {
	        item.formData.push({singer_id: $scope.songInfo.singerId});
	        item.formData.push({album_id: $scope.songInfo.albumId});
	        item.formData.push({language: $scope.songInfo.language});
	    };
	    // 全部上传后事件
	    $scope.uploader.onCompleteAll = function() {
	        console.info('onCompleteAll');
	    };
	}]);

	__webpack_require__(15);
	__webpack_require__(17);
	__webpack_require__(19);


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 左侧菜单栏生成指令
	 * Created by 郑树聪 on 2016/3/21.
	 */
	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	// 显示菜单
	musicApp.directive('showAdminMenu', function(){

	    return {
	        restrict:'EA',
	        scope: {
	            menus: '='
	        },
	        replace: true,
	        templateUrl: 'app/views/Menu/menuTpl.html',
	        controller: function($scope, $state){

	            // 初始化时默认展开当前链接对应的菜单
	            var flag=false;
	            for(var i = 0; i < $scope.menus.length; i++){
	                for(var j = 0; j < $scope.menus[i].subMenus.length; j++){
	                    if($state.is('admin') ||$state.includes($scope.menus[i].subMenus[j].state)) {
	                        $scope.menus[i].isMenuOpen = true;
	                        flag = true;
	                        break;
	                    }
	                }
	                if(flag) {
	                    break;
	                }
	            }

	            // 菜单列表展开折叠切换
	            $scope.toggleMenuOpen = function(menu) {

	                menu.isMenuOpen = !menu.isMenuOpen;
	            };
	        }
	    };
	});


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 用户管理模块指令集
	 * Created by 郑树聪 on 2016/3/8.
	 */
	var $func = __webpack_require__(13);
	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	musicApp.directive('datePicker', function(){

	    return {
	        restrict: 'EA',
	        replace: true,
	        scope: {
	            date: '=',
	            label: '@'
	        },
	        template: '<div class="form-group clearfix select-date">' +
	            '<label class="pull-left">{{label}}：</label>' +
	            '<div class="input-group pull-left"><span class="input-group-addon"><i class="fa fa-calendar"></i></span>' +
	            '<input type="text" class="form-control" ng-click="open()" uib-datepicker-popup ng-model="date" ' +
	            'is-open="opened" datepicker-options="dateOptions" on-open-focus="false" show-button-bar="false" /></div></div>',
	        link: function($scope, elem, attrs) {

	            if(angular.isUndefined($scope.date)) {
	                $scope.date = new Date();
	            } else {
	                $scope.date = new Date($scope.date);
	            }

	            $scope.dateOptions = {
	                dateDisabled: disabled,
	                maxDate: new Date(),
	                startingDay: 1,
	                showWeeks: false
	            };

	            $scope.opened = false;

	            $scope.open = function(){
	                $scope.opened = true;
	            };

	            function disabled(data) {
	                var date = data.date,
	                    mode = data.mode;
	                return mode === 'day' && (date.getDay() === 0 || date.getDay() === 6);
	            }
	        }
	    };
	});

	// 地区选择
	musicApp.directive('citySelect', ['$window', 'AdminService', function($window, AdminService){

	    return {
	        replace: true,
	        restrict: 'EA',
	        scope: {
	            code: '='
	        },
	        template: '<div class="form-group clearfix area"><label class="pull-left">地区：</label>' +
	            '<div class="input-group pull-left">' +
	            '<select class="form-control" ng-model="provinceCode" ng-options="province.code as province.province for province in provinces">' +
	            '<option value="">-- 省份 --</option></select>' +
	            '<select class="form-control" ng-model="cityCode" ng-options="city.code as city.city for city in cities">' +
	            '<option value="">-- 城市 --</option></select>' +
	            '<select class="form-control" ng-model="districtCode" ng-options="district.code as district.district for district in districts">' +
	            '<option value="">-- 地区 --</option></select></div></div>',
	        link: function($scope, elem, attrs) {

	            if(angular.isUndefined($window.localStorage.areas)) {
	                AdminService.getAreas().success(function(data, status, headers, config) {

	                    if(data.success) {
	                        $window.localStorage.areas = JSON.stringify({areas: data.areas});
	                        $scope.areas = data.areas;
	                        $scope.provinces = initProvinces(data.areas);

	                    } else {
	                        console.log(data.msg);
	                    }
	                }).error(function(data, status, headers, config){

	                    console.log(data.msg);
	                });
	            } else {
	                var areas = JSON.parse($window.localStorage.areas).areas;
	                $scope.areas = areas;
	                $scope.provinces = initProvinces(areas);
	            }

	            if($scope.code) {
	                var areaName = $func.getAreaName($scope.code, $scope.areas);
	                $scope.provinceCode = areaName.provinceCode;
	                $scope.cityCode = areaName.cityCode;
	                $scope.districtCode = areaName.districtCode;
	            }

	            // 监控省份选中
	            $scope.$watch('provinceCode', function (value) {

	                $scope.cities = [];
	                if(value){
	                    var thisProvince =getAreaByCode(value);
	                    // 初始化城市下拉选项
	                    if(thisProvince.city !== '') {
	                        $scope.cities.push(thisProvince);
	                    } else {
	                        for(var j=0; j < $scope.areas.length; j++){
	                            if($scope.areas[j].parent === thisProvince.id){
	                                $scope.cities.push($scope.areas[j]);
	                            }
	                        }
	                    }
	                    $scope.code = value;
	                }
	            });
	            // 监控市区选中
	            $scope.$watch('cityCode', function (value) {

	                $scope.districts = [];

	                if(value) {
	                    var thisCity = getAreaByCode(value);
	                    for(var i=0; i < $scope.areas.length; i++){
	                        if($scope.areas[i].parent === thisCity.id){
	                            $scope.districts.push($scope.areas[i]);
	                        }
	                    }
	                    $scope.code = value;
	                }
	            });
	            // 监控县区选中
	            $scope.$watch('districtCode', function (value) {

	                if(value){
	                    $scope.code = value;
	                }
	            });

	            function initProvinces(areas) {
	                var provinces = [];

	                for(var i=0; i<areas.length; i++){
	                    if(areas[i].id !== 1 && areas[i].province !== ''){
	                        provinces.push(areas[i]);
	                    }
	                }

	                return provinces;
	            }

	            // 根据code获取对应区域对象
	            function  getAreaByCode(code) {
	                var thisArea;
	                for(var i=0; i < $scope.areas.length; i++) {
	                    if($scope.areas[i].code === code) {
	                        thisArea = $scope.areas[i];
	                        break;
	                    }
	                }
	                return thisArea;
	            }
	        }
	    };
	}]);

	// 歌手选择
	musicApp.directive('singerSelect', function(SingerService){

	    return {
	        replace: true,
	        restrict: 'EA',
	        scope: {
	            selectedSingerId: '='
	        },
	        template: '<div class="form-group singer-select"><label class="pull-left">歌手选择：</label>' +
	            '<div class="input-group">' +
	            '<select class="form-control" ng-model="selectedSingerId" ng-options="singer.id as singer.singer_name for singer in allSingers">' +
	            '<option value="">-- 选择歌手 --</option></select></div></div>',
	        link: function($scope) {

	            SingerService.getAllSingers().success(function(data) {

	                if(data.success) {
	                    $scope.allSingers = data.allSingers;
	                }
	            });
	        }
	    };
	});

	// 语种选择
	musicApp.directive('languageSelect', function(){

	    return {
	        replace: true,
	        restrict: 'EA',
	        scope: {
	            selectedLanguageId: '='
	        },
	        template: '<div class="form-group language-select"><label class="pull-left">语种选择：<span class="require">*</span></label>' +
	            '<div class="input-group">' +
	            '<select class="form-control" ng-model="selectedLanguageId"' +
	            ' ng-options="language.id as language.text for language in languages">' +
	            '<option value="">-- 选择语种 --</option></select></div></div>',
	        link: function($scope) {

	            $scope.languages = $config.languages;
	        }
	    };
	});

	// 歌手延伸专辑选择
	musicApp.directive('singerAndAlbumSelect', function($filter, SingerService, AlbumService){

	    return {
	        replace: true,
	        restrict: 'EA',
	        scope: {
	            selectedSingerId: '=',
	            selectedAlbumId: '='
	        },
	        template: '<div class="form-group singer-album-select clearfix"><label class="pull-left">歌手及专辑：</label>' +
	            '<div class="input-group pull-left">' +
	            '<select class="form-control" ng-model="selectedSingerId" ' +
	            'ng-options="singer.id as singer.singer_name for singer in allSingers">' +
	            '<option value="">-- 选择歌手 --</option></select>' +
	            '<select class="form-control" ng-model="selectedAlbumId" ' +
	            'ng-options="album.id as album.album_name for album in albums | filter: filterAlbums">' +
	            '<option value="">-- 歌手专辑 --</option></select></div></div>',
	        link: function($scope) {

	            $scope.allSingers = [];
	            $scope.albums = [];
	            // 获取所有歌手
	            SingerService.getAllSingers().success(function(data) {

	                if(data.success) {
	                    $scope.allSingers = data.allSingers;
	                }
	            });
	            // 获取所有专辑
	            AlbumService.getAllAlbums().success(function(data) {
	                if(data.success) {
	                    $scope.albums = data.albums;
	                }
	            });
	            // 根据歌手id过滤专辑
	            $scope.filterAlbums = function(album){
	                return album.singer_id === $scope.selectedSingerId;
	            };

	        }
	    };
	});


/***/ },
/* 13 */
/***/ function(module, exports) {

	/**
	 * Created by 郑树聪 on 2016/3/24.
	 */

	module.exports.getAreaName = function(code, areas) {

	    var areaName = {};
	    var len = areas.length, i, j, k;
	    for(i=0; i<len; i++){
	        if(areas[i].code === code){
	            if(areas[i].district !== '') {
	                areaName.district = areas[i].district;
	                areaName.districtCode = areas[i].code;
	                for(j=0; j< len; j++ ) {
	                    if(areas[j].id === areas[i].parent) {
	                        areaName.city = areas[j].city;
	                        areaName.cityCode = areas[j].code;
	                        if(areas[j].province === areas[j].city) {
	                            areaName.province = areas[j].province;
	                            areaName.provinceCode = areas[j].code;
	                            break;
	                        } else {
	                            for(k = 0; k < len; k++){
	                                if(areas[k].id === areas[j].parent) {
	                                    areaName.province = areas[k].province;
	                                    areaName.provinceCode = areas[k].code;
	                                    break;
	                                }
	                            }
	                        }
	                    }
	                }
	            } else if(areas[i].city !== '') {
	                areaName.city = areas[i].city;
	                for(j = 0; j < len; j++){
	                    if(areas[j].paidrent === areas[i].parent) {
	                        areaName.province = areas[j].province;
	                        areaName.provinceCode = areas[j].code;
	                        break;
	                    }
	                }
	            } else if(areas[i].province !== ''){
	                areaName.province = areas[i].province;
	                areaName.provinceCode = areas[i].code;
	                break;
	            }
	            break;
	        }
	    }
	    return areaName;
	};

	module.exports.formatDate = function(date) {

	    date = new Date(date);
	    return date.getFullYear() + '-' +
	        (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-' +
	        (date.getDate() < 10 ? '0'+date.getDate() : date.getDate());
	};

	module.exports.getMusicTime = function($document, lists) {

	    var audio = document.createElement('audio');
	    for(var i=0; i<lists.length; i++) {
	        audio.src = lists[i].url;
	        lists[i].duration = formatTime(audio.duration);
	    }
	    return lists;
	};

	function formatTime(time) {
	    var timeMin = parseInt(time/60);
	    var timeSecond = parseInt(time%60);
	    if(timeSecond < 10 ) {
	        timeSecond = '0'+timeSecond;
	    }
	    return timeMin + ':' + timeSecond;
	}


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 用户管理模块服务
	 * Created by 郑树聪 on 2016/3/27.
	 */
	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	// 管理中心相关服务
	musicApp.factory('AdminService', ['$http', function($http) {

	    return {
	        // 获取左侧菜单数据
	        getMenu: function(){

	            return $http.get($config.api.getMenuByRole, {});
	        },
	        // 获取省份、城市、地区数据
	        getAreas: function(){

	            return $http.get($config.api.getAreas, {});
	        }
	    };
	}]);

	/**
	 * 分页表格（全选功能）数据共享服务
	 * @param pagination {Object} 分页器参数
	 * @param itemIds {Array} 当前页的选项id
	 * @param selectItemIds {Array} 选中的项id
	 */
	musicApp.factory('PageTableData', function(){

	    return {
	        pagination: {
	            currPage: 1,
	            itemsPerPage: 10,
	            maxSize: 3,
	            totalItems: 0
	        },
	        itemIds: [],
	        selectItemIds: []
	    };
	});


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Created by 郑树聪 on 2016/3/28.
	 */
	__webpack_require__(14);
	__webpack_require__(16);

	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	// 歌手列表控制器
	musicApp.controller('SingerCtrl', ['$rootScope', '$scope', '$location', '$state', '$log', 'SingerService', 'PageTableData',
	    function($rootScope, $scope, $location, $state, $log, SingerService, PageTableData){

	        $scope.singerTypes = $config.singerTypes;
	        $scope.languages = $config.languages;

	        // 获取歌手列表数据
	        $scope.getSingers = function(nextPage, pageSize, keyword){

	            var params = {
	                currPage: nextPage || 1,
	                pageSize: pageSize || 10
	            };
	            if(keyword) {
	                params.keyword = keyword;
	            }

	            SingerService.getSingers(params).success(function(data) {

	                if(data.success) {
	                    $scope.singers = data.singers;

	                    for(var i=0; i<data.singers.length; i++) {

	                        for(var j=0; j<$config.singerTypes.length; j++) {
	                            if($scope.singers[i].singer_type === $config.singerTypes[j].id) {
	                                $scope.singers[i].singer_type_text = $config.singerTypes[j].text;
	                                break;
	                            } else {
	                                $scope.singers[i].singer_type_text = '';
	                            }
	                        }
	                        for(var k=0; k<$config.languages.length; k++) {
	                            if($scope.singers[i].language === $config.languages[k].id) {
	                                $scope.singers[i].language_text = $config.languages[k].text;
	                                break;
	                            } else {
	                                $scope.singers[i].language_text = '';
	                            }
	                        }

	                        PageTableData.itemIds.push($scope.singers[i].id);
	                    }
	                    PageTableData.pagination.totalItems = data.totalItems;
	                    PageTableData.pagination.currPage = data.currPage;
	                } else {
	                    console.log(data.msg);
	                }
	            }).error(function(data) {
	                console.log(data.msg);
	            });
	        };
	        // 回车搜索专辑
	        $scope.search = function($event) {

	            var keyCode = $event.which || $event.keyCode;
	            if (keyCode === 13) {
	                var params = $event.target.value;
	                $scope.getSingers(1, 10, params);
	            }
	        };

	        $scope.singerInfo = {};
	        // 修改歌手信息
	        $scope.saveSingerInfo = function() {

	            if($state.is('admin.singers.addSinger')) {

	                SingerService.addSinger($scope.singerInfo).success(function(data){
	                    if(data.success) {
	                        alert('添加成功');
	                        $location.search('subPage', 'singerList');
	                    }
	                });
	            } else {

	                SingerService.updateSinger($scope.singerInfo).success(function(data){
	                    if(data.success) {
	                        alert('更新成功');
	                    }
	                });
	            }
	        };
	        // 删除单个歌手
	        $scope.deleteSinger = function(id){

	            if(angular.isUndefined(id)) {
	                id = PageTableData.selectItemIds;
	            }

	            var ids = [];
	            if(angular.isArray(id)) {
	                if (id.length > 0){
	                    ids = id;
	                } else {
	                    alert('请先勾选要删除的项！');
	                    return;
	                }
	            } else {
	                ids.push(id);
	            }
	            SingerService.deleteSingers(ids).success(function(data) {

	                if(data.success) {
	                    alert('删除成功');
	                    $scope.getSingers();
	                }
	            });
	        };
	        // 跳转到某位歌手主页
	        $scope.goToSingerPage = function(id) {

	            $location.path('/singer?singerId=' + id);
	        };

	        $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams){

	            if(toState.name === 'admin.singers.addSinger') {
	                $scope.breadcrumbs = [
	                    {name: '歌手列表', state: 'admin.singers.singerList'},
	                    {name: '添加歌手', state: false}
	                ];
	            } else if(toState.name === 'admin.singers.editSinger') {
	                $scope.breadcrumbs = [
	                    {name: '歌手列表', state: 'admin.singers.singerList'},
	                    {name: '修改歌手信息', state: false}
	                ];

	                var id = toParams.singerId;
	                SingerService.getSingerById(id).success(function(data){

	                    if(data.success) {
	                        $scope.singerInfo = data.singer;
	                    }
	                });

	            } else {
	                $scope.breadcrumbs = [
	                    {name: '歌手列表', state: false}
	                ];
	            }
	        });
	    }
	]);


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 歌手相关服务
	 * Created by 郑树聪 on 2016/4/9.
	 */
	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	// 管理中心相关服务
	musicApp.factory('SingerService', ['$http', function($http) {

	    return {
	        // 获取获取所有歌手的id、name
	        getAllSingers: function(){

	            return $http({
	                method: 'GET',
	                url: $config.api.getAllSingers
	            });
	        },
	        // 获取歌手列表
	        getSingers: function(pagination){

	            return $http({
	                method: 'GET',
	                url: $config.api.getSingers,
	                params: {
	                    currPage: pagination.currPage,
	                    pageSize: pagination.pageSize,
	                    keyword: pagination.keyword
	                }
	            });
	        },
	        // 根据id获取某位歌手信息
	        getSingerById: function(id){

	            return $http({
	                method: 'GET',
	                url: $config.api.getSingerById,
	                params: {
	                    id: id
	                }
	            });
	        },
	        addSinger: function(singer){

	            return $http({
	                method: 'POST',
	                url: $config.api.addSinger,
	                data: {
	                    singer_name: singer.singer_name,
	                    singer_type: singer.singer_type,
	                    language: singer.language,
	                    singer_info: singer.singer_info
	                }
	            });
	        },
	        updateSinger: function(singer) {

	            return $http({
	                method: 'POST',
	                url: $config.api.updateSinger,
	                data: {
	                    id: singer.id,
	                    singer_name: singer.singer_name,
	                    singer_type: singer.singer_type,
	                    language: singer.language,
	                    singer_info: singer.singer_info
	                }
	            });
	        },
	        deleteSingers: function(ids){

	            return $http({
	                method: 'POST',
	                url: $config.api.deleteSingers,
	                data: {
	                    ids: ids
	                }
	            });
	        }
	    };
	}]);


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 专辑列表控制器
	 * Created by 郑树聪 on 2016/3/28.
	 */
	__webpack_require__(14);
	__webpack_require__(18);

	var $func = __webpack_require__(13);
	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	musicApp.controller('AlbumCtrl', ['$rootScope', '$scope', '$location', '$routeParams', '$log', 'AlbumService', 'PageTableData',
	    function($rootScope, $scope, $location, $routeParams, $log, AlbumService, PageTableData){

	        // 获取歌手列表数据
	        $scope.getAlbums = function(nextPage, pageSize, keyword){

	            var params = {
	                currPage: nextPage || 1,
	                pageSize: pageSize || 10
	            };
	            if(keyword) {
	                params.keyword = keyword;
	            }

	            AlbumService.getAlbums(params).success(function(data) {

	                if(data.success) {
	                    $scope.albums = data.albums;
	                    for(var i=0; i<data.albums.length; i++) {
	                        PageTableData.itemIds.push(data.albums[i].id);
	                    }
	                    PageTableData.pagination.totalItems = data.totalItems;
	                    PageTableData.pagination.currPage = data.currPage;
	                } else {
	                    console.log(data.msg);
	                }
	            }).error(function(data) {
	                console.log(data.msg);
	            });
	        };
	        // 回车搜索专辑
	        $scope.search = function($event) {

	            var keyCode = $event.which || $event.keyCode;
	            if (keyCode === 13) {
	                $scope.getAlbums(1, 10, $event.target.value);
	            }
	        };

	        $scope.albumInfo = {};
	        // 修改专辑信息
	        $scope.saveAlbumInfo = function() {

	            var date = $scope.albumInfo.publish_date;
	            $scope.albumInfo.publish_date = $func.formatDate(date);

	            if($scope.isAddAlbum) {

	                AlbumService.addAlbum($scope.albumInfo).success(function(data){
	                    if(data.success) {
	                        alert('添加成功');
	                        $location.search('subPage', 'albumList');
	                    }
	                });
	            } else {

	                AlbumService.updateAlbum($scope.albumInfo).success(function(data){
	                    if(data.success){
	                        $scope.albumInfo.publish_date = date;
	                        alert('更新成功');
	                    }
	                });
	            }
	        };
	        // 删除单张专辑
	        $scope.deleteAlumsById = function(id){

	            if(angular.isUndefined(id)) {
	                id = PageTableData.selectItemIds;
	            }

	            var ids = [];
	            if(angular.isArray(id)) {
	                if (id.length > 0){
	                    ids = id;
	                } else {
	                    alert('请先勾选要删除的项！');
	                    return;
	                }
	            } else {
	                ids.push(id);
	            }
	            AlbumService.deleteAlumsById(ids).success(function(data) {

	                if(data.success) {
	                    alert('删除成功');
	                    $scope.getAlbums();
	                }
	            });
	        };
	        // 跳转到某位歌手主页
	        $scope.goToAlbumPage = function(id) {

	            $location.path('/album?albumId=' + id);
	        };

	        $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams){

	            if(toState.name === 'admin.albums.addAlbum') {
	                $scope.breadcrumbs = [
	                    {name: '专辑列表', state: 'admin.albums.albumList'},
	                    {name: '添加专辑', state: false}
	                ];
	            } else if(toState.name === 'admin.albums.editAlbum') {
	                $scope.breadcrumbs = [
	                    {name: '专辑列表', state: 'admin.albums.albumList'},
	                    {name: '修改专辑信息', state: false}
	                ];

	                var id = toParams.albumId;
	                AlbumService.getAlbumById(id).success(function(data){

	                    if(data.success) {
	                        $scope.albumInfo = data.album;
	                        if($scope.albumInfo.publish_date) {
	                            $scope.albumInfo.publish_date = new Date($scope.albumInfo.publish_date);
	                        } else {
	                            $scope.albumInfo.publish_date = new Date();
	                        }
	                    }
	                });

	            } else {
	                $scope.breadcrumbs = [
	                    {name: '专辑列表', state: false}
	                ];
	            }
	        });
	    }
	]);


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 专辑相关服务
	 * Created by 郑树聪 on 2016/4/9.
	 */
	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	// 管理中心相关服务
	musicApp.factory('AlbumService', ['$http', function($http) {

	    return {
	        // 获取所有专辑的id和name
	        getAllAlbums: function(){

	            return $http({
	                method: 'GET',
	                url: $config.api.getAllAlbums
	            });
	        },
	        getAlbums: function(pagination){

	            return $http({
	                method: 'GET',
	                url: $config.api.getAlbums,
	                params: {
	                    currPage: pagination.currPage,
	                    pageSize: pagination.pageSize,
	                    keyword: pagination.keyword
	                }
	            });
	        },
	        getAlbumById: function(id){

	            return $http({
	                method: 'GET',
	                url: $config.api.getAlbumById,
	                params: {
	                    id: id
	                }
	            });
	        },
	        getAlbumsBySingerId: function(singerId){

	            return $http({
	                method: 'GET',
	                url: $config.api.getAlbumsBySingerId,
	                params: {
	                    singer_id: singerId
	                }
	            });
	        },
	        addAlbum: function(albumInfo){

	            return $http({
	                method: 'POST',
	                url: $config.api.addAlbum,
	                data: {
	                    album_name: albumInfo.album_name,
	                    album_info: albumInfo.album_info,
	                    publish_date: albumInfo.publish_date,
	                    singer_id: albumInfo.singer_id
	                }
	            });
	        },
	        updateAlbum: function(albumInfo){

	            return $http({
	                method: 'POST',
	                url: $config.api.updateAlbum,
	                data: {
	                    id: albumInfo.id,
	                    album_name: albumInfo.album_name,
	                    album_info: albumInfo.album_info,
	                    publish_date: albumInfo.publish_date,
	                    singer_id: albumInfo.singer_id
	                }
	            });
	        },
	        /**
	         * 根据id删除专辑
	         * @param ids {Array} 要删除的项
	         */
	        deleteAlumsById: function(ids){

	            return $http({
	                method: 'POST',
	                url: $config.api.deleteAlumsById,
	                data: {
	                    ids: ids
	                }
	            });
	        },
	        /**
	         * 根据歌手id删除专辑
	         * @param singerIds {Array} 要删除专辑的歌手id
	         */
	        deleteAlbumsBySingerId: function(singerIds){

	            return $http({
	                method: 'POST',
	                url: $config.api.deleteAlbumsBySingerId,
	                data: {
	                    singerIds: singerIds
	                }
	            });
	        }
	    };
	}]);


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Created by 郑树聪 on 2016/3/30.
	 */
	__webpack_require__(14);
	__webpack_require__(9);

	var $func = __webpack_require__(13);
	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	// 歌手列表控制器
	musicApp.controller('SongCtrl', ['$scope', '$location', '$routeParams', '$log', 'SongService', 'PageTableData',
	    function($scope, $location, $routeParams, $log, SongService, PageTableData){

	        $scope.singerTypes = $config.singerTypes;
	        $scope.languages = $config.languages;

	        $scope.getSongsByPage = function(nextPage, pageSize, params) {

	            var apiParams = {
	                currPage: nextPage || 1,
	                pageSize: pageSize || 10
	            };
	            if(!angular.isUndefined(params)) {
	                if(!angular.isUndefined(params.language)) {
	                    apiParams.language = params.language;
	                }
	                if(!angular.isUndefined(params.singer_id)) {
	                    apiParams.singer_id = params.singer_id;
	                }
	                if(!angular.isUndefined(params.album_id)) {
	                    apiParams.album_id = params.album_id;
	                }
	            }
	            if($scope.keyword) {
	                apiParams.keyword = $scope.keyword;
	            }

	            SongService.getSongsByPage(apiParams).success(function(data) {

	                if(data.success) {

	                    for(var i=0; i<data.songs.length; i++) {
	                        data.songs[i].publish_date = $func.formatDate(data.songs[i].publish_date);
	                        PageTableData.itemIds.push(data.songs[i].id);
	                    }
	                    PageTableData.pagination.totalItems = data.totalItems;
	                    PageTableData.pagination.currPage = data.currPage;
	                    $scope.songs = data.songs;
	                } else {
	                    console.log(data.message);
	                }
	            }).error(function(data) {
	                console.log(data.message);
	            });
	        };
	    }
	]);

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 播放器组件
	 * Created by 郑树聪 on 2016/2/18.
	 */
	__webpack_require__(21);
	__webpack_require__(22);

	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	// 播放器控制器
	musicApp.controller('PlayerCtrl', ['$rootScope', '$scope', '$document', '$window', '$interval', '$state', 'MusicData', 'Audio', 'Player',
	    function($rootScope, $scope, $document, $window, $interval, $state, MusicData, Audio, Player){

	        var progressWidth = 680;
	        $scope.playMode = MusicData.playMode;
	        $scope.player = new Player();
	        if(MusicData.lists.length > 0) $scope.player.controllPlay(MusicData.index);
	        // 双击播放列表某首音乐播放
	        $scope.isSelected = function(){
	            $scope.player.controllPlay(this.$index);
	        };
	        $scope.duration = '00:00';
	        $scope.currentTime = '00:00';
	        //音乐剩余时间
	        $scope.surplusBar = function() {
	            if(!isNaN(Audio.duration)) {
	                $scope.duration = formatTime(Audio.duration);
	                $scope.currentTime = formatTime(Audio.currentTime);
	                //播放进度条
	                var progressValue = Audio.currentTime/Audio.duration*progressWidth;
	                $scope.surplusWidth = 'width:' + parseInt(progressValue) + 'px';
	            }
	        };
	        //缓冲进度条
	        $scope.bufferBar = function() {
	            bufferTimer = $interval(function() {
	                var bufferIndex = Audio.buffered.length;
	                if (bufferIndex > 0 && !angular.isUndefined(Audio.buffered)) {
	                    var bufferValue = Audio.buffered.end(bufferIndex-1)/Audio.duration*progressWidth;
	                    $scope.bufferWidth = 'width:' + parseInt(bufferValue) + 'px';
	                    if (Math.abs(Audio.duration - Audio.buffered.end(bufferIndex-1)) <1) {
	                        $scope.bufferWidth = 'width: ' + progressWidth + 'px';
	                        clearInterval(bufferTimer);
	                    }
	                }
	            }, 1000);
	        };
	        // 播放器进度条控制
	        $scope.adjustPorgress = function(event) {
	            event = window.event || event;
	            var progressX = event.clientX - $document[0].querySelector('#music-progress').getBoundingClientRect().left;
	            Audio.currentTime = parseInt(progressX/progressWidth*Audio.duration);
	            Audio.removeEventListener('canplay', $scope.bufferBar);
	        };
	        // 改变播放循环模式
	        $scope.changePlayMode = function(playMode) {
	            var playModes = ['loop', 'random', 'repeat'];
	            var index = playModes.indexOf(playMode);
	            if(index === playModes.length-1) {
	                index = 0;
	            } else {
	                ++index;
	            }
	            MusicData.playMode = playModes[index];
	            $scope.playMode = MusicData.playMode;
	        };
	        //控制音量
	        $scope.volStyle = 'height: 80px';
	        Audio.volume = 0.8;
	        $scope.adjustVolume = function(ev){ //调整音量
	            var event = window.event || ev;
	            var volumeY = $document[0].querySelector('#play-vol').getBoundingClientRect().bottom - event.clientY;
	            Audio.volume = (volumeY/100).toFixed(2);
	            $scope.volStyle = "height:" + volumeY + 'px';
	            if(volumeY === 0) {
	                Audio.muted = true;
	                $scope.muted = false;
	            } else {
	                Audio.muted = false;
	                $scope.muted = true;
	            }
	        };
	        //声音是否播放
	        $scope.muted = true;
	        //$scope.audioMuted = function() {
	        //    $scope.volumeBox=!$scope.volumeBox;
	        //    if(!Audio.muted) {
	        //        Audio.muted = true;
	        //        $scope.muted = false;
	        //    } else {
	        //        Audio.muted = false;
	        //        $scope.muted = true;
	        //    }
	        //};

	        //播放时间
	        Audio.addEventListener('timeupdate', function(){
	            $scope.$apply($scope.surplusBar());
	        });
	        //缓冲时间
	        Audio.addEventListener('canplay', function(){
	            $scope.$apply($scope.bufferBar());
	        });

	        Audio.addEventListener('ended', function() {
	            $scope.player.next();
	        });

	        function formatTime(time) {
	            var timeMin = parseInt(time/60);
	            var timeSecond = parseInt(time%60);
	            if(timeSecond < 10 ) {
	                timeSecond = '0'+timeSecond;
	            }
	            return timeMin + ':' + timeSecond;
	        }
	    }
	]);


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 播放器相关服务功能
	 * Created by 郑树聪 on 2016/4/11.
	 */
	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	//Audio Service
	musicApp.factory('Audio', ['$document', function($document) {
	    var audio = $document[0].createElement('audio');
	    return audio;
	}]);
	// 播放列表数据
	musicApp.factory('MusicData', function() {

	    var lists = [
	        {
	            album_id: 1,
	            album_name: "我本人",
	            id: 1,
	            like_count: 0,
	            listen_count: 0,
	            publish_date: "2012-01-01T00:00:00.000Z",
	            singer_id: 1,
	            singer_name: "吴雨霏",
	            song_img: "http://localhost:3000/app/resources/images/29c6d9f1-c3f6-49e9-a6d0-7c55694a4e75.jpeg",
	            song_name: "生命树",
	            url: "http://localhost:3000/app/resources/music/e74f0f75-1c55-454e-8a6a-4f076a03239e.mp3"
	        },
	        {
	            album_id: 6,
	            album_name: '绅士',
	            id: 6,
	            like_count: 0,
	            listen_count: 0,
	            publish_date: "2016-04-04T16:34:27.000Z",
	            singer_id: 5,
	            singer_name: '薛之谦',
	            song_img: "http://localhost:3000/app/resources/images/e1e57819-748c-4c49-b48c-5848ebc79b8f.jpeg",
	            song_name: "绅士",
	            url: "http://localhost:3000/app/resources/music/ed8884cb-8145-4e5a-a723-450186e0bca5.mp3"
	        }
	    ];

	    return {
	        // 播放列表
	        lists: lists,
	        // 正在播放的歌曲的下标位置，默认0
	        index: 0,
	        // 播放器当前播放模式,列表循环:'loop',随机播放:'random',单曲循环:'repeat',默认'list'
	        playMode: 'loop'
	    };
	});
	// 播放器
	musicApp.factory('Player', ['$rootScope', 'MusicData', 'Audio', function($rootScope, MusicData, Audio) {
	    // 正在播放的歌曲信息
	    $rootScope.MusicData = MusicData;
	    $rootScope.playingMusic = {};
	    var Player = function(playing){
	        this.playing = playing || false;
	    };
	    Player.prototype.controllPlay = function(index){
	        $rootScope.playingMusic = MusicData.lists[index];
	        MusicData.index = index;
	        this.setAudioSrc(index);
	        this.play();
	        this.playing = true;
	    };
	    // 设置播放器audio标签的src
	    Player.prototype.setAudioSrc = function(index){
	        Audio.src = MusicData.lists[index].url;
	    };
	    // 播放
	    Player.prototype.play = function() {
	        if(this.playing) this.stop();
	        Audio.play(); //h5 audio api
	        this.playing = true; //显示暂停按钮
	    };
	    // 暂停
	    Player.prototype.stop = function() {
	        if(this.playing) Audio.pause();
	        this.playing = false;//显示播放按钮
	    };
	    // 上一首
	    Player.prototype.prev = function() {
	        var index = MusicData.index;
	        switch (MusicData.playMode){
	            case 'random':
	                index = parseInt(MusicData.lists.length * Math.random());
	                // 如果随机歌曲和当前的歌曲相同，则跳到下一首
	                if(index === MusicData.index) ++index;
	                break;
	            case 'repeat':
	                index = MusicData.index;
	                break;
	            default:
	                if(MusicData.index === 0) {
	                    index = MusicData.lists.length-1;
	                } else {
	                    --index;
	                }
	                break;
	        }
	        this.controllPlay(index);
	    };
	    // 下一首
	    Player.prototype.next = function() {

	        var index = MusicData.index;
	        switch (MusicData.playMode){
	            case 'random':
	                index = parseInt(MusicData.lists.length * Math.random());
	                // 如果随机歌曲和当前的歌曲相同，则跳到下一首
	                if(index === MusicData.index) ++index;
	                break;
	            case 'repeat':
	                index = MusicData.index;
	                break;
	            default:
	                if(MusicData.index === MusicData.lists.length -1 ){
	                    index = 0;
	                } else {
	                    ++index;
	                }
	                break;
	        }
	        this.controllPlay(index);
	    };

	    return Player;
	}]);


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 音乐播放器指令
	 * Created by 郑树聪 on 2016/4/11.
	 */
	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	// 音乐播放器生成指令
	musicApp.directive('musicPlayer', function(){

	    return {
	        restrict:'EA',
	        replace: true,
	        templateUrl: 'app/views/Player/player.html'
	    };
	});


/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Created by 郑树聪 on 2016/4/13.
	 */
	var $config = __webpack_require__(1);

	var musicApp = $config.musicApp;

	// 搜索功能控制器
	musicApp.controller('SearchCtrl', ['$scope', '$state', '$stateParams', 'PageTableData', 'SongService', 'SingerService',
	    'AlbumService', 'PlaylistService',
	    function($scope, $state, $stateParams, PageTableData, SongService, SingerService, AlbumService, PlaylistService){

	        // 搜索选项tab页签
	        $scope.tabs = [
	            {type: 0, name: '单曲', content: 'search.song.html'},
	            {type: 1, name: '歌手', content: 'search.singer.html'},
	            {type: 2, name: '专辑', content: 'search.album.html'},
	            {type: 3, name: '歌单', content: 'search.playlist.html'}
	        ];

	        var type = Number($stateParams.type) || 0;
	        $scope.activeTab = $scope.tabs[type];
	        $scope.activeTab.type = type;

	        $scope.keyword = $stateParams.keyword || '';

	        $scope.changeTab = function(type) {
	            $scope.activeTab = $scope.tabs[type];
	            $scope.activeTab.type = type;
	            $state.go('search', {keyword: $scope.keyword, type: type});
	        };

	        $scope.search = function($event) {

	            var keyCode = $event.which || $event.keyCode;
	            if (keyCode === 13 || $event.type === 'click') {
	                $scope.results = [];
	                $scope.totalItems = 0;
	                PageTableData.pagination.totalItems = 0;
	                PageTableData.pagination.currPage = 1;
	                $scope.doSearch(PageTableData.pagination.currPage, PageTableData.pagination.itemsPerPage,
	                    $scope.activeTab.type);
	            }
	        };

	        $scope.$watch('activeTab.type', function(value) {

	            if(!angular.isUndefined(value)) {
	                // 每页显示的条目数
	                PageTableData.pagination.itemsPerPage = 20;
	                $scope.results = [];
	                $scope.totalItems = 0;
	                PageTableData.pagination.totalItems = 0;
	                PageTableData.pagination.currPage = 1;
	                $scope.doSearch(PageTableData.pagination.currPage, PageTableData.pagination.itemsPerPage,
	                    value);
	            }
	        });

	        // 按照选择筛选
	        $scope.doSearch = function (nextPage, pageSize, type) {
	            var params = {
	                currPage: nextPage || 1,
	                pageSize: pageSize || 20
	            };
	            if($scope.keyword !== '') {
	                params.keyword = $scope.keyword;
	                $state.go('search', {keyword: $scope.keyword, type: type});
	            } else {
	                return;
	            }
	            switch(type) {
	                case 0:
	                    searchSongs(params);
	                    break;
	                case 1:
	                    searchSingers(params);
	                    break;
	                case 2:
	                    searchAlbums(params);
	                    break;
	                case 3:
	                    searchPlaylists(params);
	                    break;
	            }
	        };
	        // 关键词搜索歌曲
	        function searchSongs(filters) {

	            SongService.getSongsByPage(filters).success(function(data) {
	                if(data.success) {
	                    $scope.results = data.songs;
	                    $scope.totalItems = data.totalItems;
	                    $scope.totalItemsTips = '首单曲';
	                    PageTableData.pagination.totalItems = data.totalItems;
	                    PageTableData.pagination.currPage = data.currPage;
	                }
	            });
	        }
	        // 关键词搜索歌曲
	        function searchSingers(filters) {
	            SingerService.getSingers(filters).success(function(data) {
	                if(data.success) {
	                    $scope.results = data.singers;
	                    $scope.totalItems = data.totalItems;
	                    $scope.totalItemsTips = '个歌手';
	                    PageTableData.pagination.totalItems = data.totalItems;
	                    PageTableData.pagination.currPage = data.currPage;
	                }
	            });
	        }
	        // 关键词搜索专辑
	        function searchAlbums(filters) {
	            AlbumService.getAlbums(filters).success(function(data) {
	                if(data.success) {
	                    $scope.results = data.albums;
	                    $scope.totalItems = data.totalItems;
	                    $scope.totalItemsTips = '张专辑';
	                    PageTableData.pagination.totalItems = data.totalItems;
	                    PageTableData.pagination.currPage = data.currPage;
	                }
	            });
	        }
	        // 关键词搜索歌单
	        function searchPlaylists(filters) {
	            PlaylistService.filterPlayListsByPage(filters).success(function(data) {
	                if(data.success) {
	                    $scope.results = data.playlists;
	                    $scope.totalItems = data.totalItems;
	                    $scope.totalItemsTips = '张歌单';
	                    PageTableData.pagination.totalItems = data.totalItems;
	                    PageTableData.pagination.currPage = data.currPage;
	                }
	            });
	        }
	    }
	]);

/***/ }
/******/ ]);